body {
    display: flex;
    flex-direction: column;
    justify-content: center;  /* Horizontally centers the .gameboard */
    align-items: center;      /* Vertically centers the .gameboard */
    height: 100vh;            /* Ensures it takes full viewport height */
    margin: 0;                /* Removes default margin */
    background: linear-gradient(45deg, #ff6a00, #ff3f6a, #2e72d2, #0dce82);
  background-size: 400% 400%;
  animation: gradient-animation 10s ease infinite;
}
@keyframes gradient-animation {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
.gameboard {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 7px;
    width: 300px;
    height: 300px;
    animation: float 4s ease-in-out infinite;
}

@keyframes float {
    0% {
        transform: translateY(0); /* Start position */
    }
    50% {
        transform: translateY(-20px); /* Float upwards */
    }
    100% {
        transform: translateY(0); /* Return to start position */
    }
}

.square {
    width: 100%;
    height: 100%;
    background-color: #f6f1f1;
    border: 2px solid #000;
    border-radius: 10%;
    font-size: 2.5rem; /* Make the text large */
    font-weight: bold; /* Make the text bold for better visibility */
    display: flex; /* Center the text inside the square */
    justify-content: center;
    align-items: center;
    transition: all 0.2s ease;
}

.square:empty:hover {
    background-color: #d8e3f3; /* Add hover effect only on empty squares */
    cursor: pointer;
}

.square:not(:empty) {
    animation: zoomIn 0.3s ease forwards; /* Apply zoom-in animation on filled squares */
}

/* Define the zoom-in animation */
@keyframes zoomIn {
    0% {
        transform: scale(0.5); /* Start small */
        opacity: 0; /* Start transparent */
    }
    100% {
        transform: scale(1); /* End at normal size */
        opacity: 1; /* End fully visible */
    }
}
#player {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 40%;
    padding: 20px;
    background: linear-gradient(135deg, #ffffff, #f0f0f0);
    border-radius: 15px; /* More rounded corners */
    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2); /* Soft shadow */
    border: 2px solid rgba(0, 0, 0, 0.2); /* Subtle border */
    gap: 20px;
    animation: float 4s ease-in-out infinite; /* Float animation */
    z-index: 10;
    font-family: 'Arial', sans-serif;
}

#player label {
    font-size: 1.2rem;
    font-weight: bold;
    color: #333; /* Neutral text color for readability */
}

#player input {
    width: 100%;
    padding: 10px;
    border-radius: 8px;
    border: 2px solid rgba(0, 0, 0, 0.3);
    font-size: 1rem;
    transition: box-shadow 0.3s ease, border 0.3s ease;
}

#player input:focus {
    border-color: #2e72d2; /* Accent color for focus */
    box-shadow: 0 0 8px rgba(46, 114, 210, 0.5);
    outline: none;
}

#player button {
    padding: 10px 20px;
    border: none;
    background: linear-gradient(45deg, #ff6a00, #0dce82);
    color: white;
    font-size: 1.2rem;
    font-weight: bold;
    border-radius: 8px;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-transform: uppercase;
}

#player button:hover {
    transform: scale(1.1); /* Slight zoom effect */
    box-shadow: 0 0 15px rgba(46, 114, 210, 0.5);
}

/* Float animation to match the rest of the theme */
@keyframes float {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-15px);
    }
    100% {
        transform: translateY(0);
    }
}

.scores {
    display: flex;
    gap: 10px;
}

#Tie, #PlayerOScore, #PlayerXScore {
    background-color: transparent;
    border: 2px solid black;
    margin-top: 10px;
    border-radius: 10px;
    padding: 10px;
    text-align: center;
    font-size: 18px;
    font-weight: bold;
    color: #000;

    /* Add animation */
    animation: pulse 3s ease-in-out infinite;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

@keyframes pulse {
    0% {
        border-color: #000;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }
    50% {
        border-color: rgb(119, 128, 192);
        box-shadow: 0 0 20px rgba(137, 109, 209, 0.8);
    }
    100% {
        border-color: #000;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }
}

#Tie:hover, #PlayerOScore:hover, #PlayerXScore:hover {
    transform: scale(1.1); /* Slight zoom effect */
    box-shadow: 0 0 25px rgb(119, 128, 192); /* Stronger glow on hover */
    cursor: pointer;
}

/* Dialog Container */
dialog {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: rgba(0, 0, 0, 0.6); /* Semi-transparent background for overlay */
    z-index: 20;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

/* Make visible when not hidden */
dialog[open] {
    opacity: 1;
    visibility: visible;
}

/* Dialog Content (Flex Column Layout) */
dialog::part(dialog) {
    background: linear-gradient(45deg, #ff6a00, #ff3f6a, #2e72d2, #0dce82);
    background-size: 400% 400%;
    animation: gradient-animation 5s ease infinite;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
    text-align: center;
    color: white;
    font-family: Arial, sans-serif;
    width: 80%;
    max-width: 500px;
}

/* Dialog Message */
dialog p {
    margin-bottom: 20px;
    font-size: 20px;
    font-weight: bold;
    color: white;
}

/* Buttons */
dialog button {
    padding: 10px 20px;
    background-color: #ffffff;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: bold;
    color: #333;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
    margin: 5px;
}

dialog button:hover {
    background-color: #ff3f6a;
    color: white;
    transform: scale(1.1);
}

/* Gradient Animation */
@keyframes gradient-animation {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}


